

/**
 * Implement Zoo collection, which consists of different animals generated by constructor function
 */

const Zoo = [
  createAnimal('Elephant', 30, 100),
  createAnimal('Jiraffa', 10, 40),
  createAnimal('Jiraffa', 10, 40),
  createAnimal('Lama', 20, 25),
  createAnimal('Lama', 20, 25),
]

/**
 * createAnimal should return animal object with following keys
 * {
 *  name - name of the animal,
 *  lifespan - lifespan (years),
 *  costPerDay - costPerDay,
 *  lifetimeCost - lifespan * 365 * costPerDay
 * }
 */
function createAnimal(name, lifespan, costPerDay) {
  const lifetimeCost = lifespan * 365 * costPerDay;

  return { name, lifespan, costPerDay, lifetimeCost };
}


/**
 * getTotalCost should calculate how much will it cost to hold all animals for some period of time (days variable)
 * animals - animals array
 * days - amount of days for calculation
 */
function getTotalCost(animals, days) {
  return animals.reduce((sum, animal) => sum + animal.costPerDay * days, 0);
}

/**
 * getMostExpensiveAnimal should return most expensive animal based on their lifetimeCost param
 */
function getMostExpensiveAnimal(animals) {
  let animal = animals[0];

  animals.forEach(currentAnimal => {
    if (animal.lifetimeCost < currentAnimal.lifetimeCost) {
      animal = currentAnimal;
    }
  })

  return animal;
}


console.log(getTotalCost(Zoo, 4));
console.log(getMostExpensiveAnimal(Zoo));
